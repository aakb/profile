<?php
/**
 * @file
 * Code for the Loop frontend module.
 */


/**
 * Implements template_preprocess_html().
 */
function loop_frontend_preprocess_html(&$variables) {
  // Load Html5 Shiv library.
  drupal_add_js(loop_frontend_get_library_file('html5shiv', 'html5shiv.js'), array(
    'type' => 'external',
    'scope' => 'header',
    'group' => JS_LIBRARY,
    'preprocess' => FALSE,
    'every_page' => TRUE,
    'weight' => -999,
  ));
  drupal_add_js(loop_frontend_get_library_file('html5shiv', 'html5shiv-printshiv.js'), array(
    'type' => 'external',
    'scope' => 'header',
    'group' => JS_LIBRARY,
    'preprocess' => FALSE,
    'every_page' => TRUE,
    'weight' => -998,
  ));
  // Load Respond.js library.
  drupal_add_js(loop_frontend_get_library_file('respondjs', 'respond.min.js'), array(
    'type' => 'external',
    'scope' => 'header',
    'group' => JS_LIBRARY,
    'preprocess' => FALSE,
    'every_page' => TRUE,
    'weight' => -997,
  ));
}


/**
 * Implements hook_form_alter().
 *
 * Adds custom class names and placeholder attribute and icon prefix to search field.
 */
function loop_frontend_form_search_block_form_alter(&$form, &$form_state, $form_id) {
  // Change title text and make sure the label is displayed.
  $form['search_block_form']['#title_display'] = 'before';
  $form['search_block_form']['#title'] = t('Search for an answer');

  // Add field title as placeholder attribute.
  $form['search_block_form']['#attributes']['placeholder'] = t('E.g. "How do you document a subject"');

  // Add icon markup as a prefix to field.
  $form['search_block_form']['#field_prefix'] = '<i class="search--icon icon-search"></i>';

  // Add class name to field.
  unset($form['search_block_form']['#attributes']['class']);
  $form['search_block_form']['#attributes']['class'] = array('search--field');

  // Add class name to form submit button.
  $form['actions']['submit']['#attributes']['class'] = array('search--button');
}


/**
 * Helper function gets the path to a libraries file.
 *
 * @param string $libpath
 *   The name of library path.
 * @param string $libfile
 *   The filename of the library.
 *
 * @return string
 *   The full path to external library.
 */
function loop_frontend_get_library_file($libpath, $libfile) {
  // If Libraries API is enabled,
  // make sure the file exists before pointing there.
  if (function_exists('libraries_get_path') && file_exists(libraries_get_path($libpath))) {
    $path = libraries_get_path($libpath);
    $path .= '/' . $libfile;
  }
  else {
    $path = NULL;
  }
  return $path;
}

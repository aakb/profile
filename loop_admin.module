<?php
/**
 * @file
 * Access in paths_alter.
 */

include_once 'loop_admin.features.inc';

/**
 * Implements hook_admin_paths_alter().
 *
 * Setup permissions for user pages and create user pages.
 */
function loop_admin_admin_paths_alter(&$paths) {
  // Treat all user pages as not administrative.
  $paths['user/*'] = FALSE;
  $paths['admin/people/create'] = FALSE;
}

/**
 * Implements hook_FORM_ID_form_alter().
 *
 * Add full name to author information tab.
 */
function loop_admin_form_post_node_form_alter(&$form, &$form_state) {
  $account = user_load($form['uid']['#value']);

  $name = _loop_admin_generate_full_name($account);
  if (!$name) {
    $name = t('Not set');
  }
  $form['author']['name']['#title'] .= ' fullname: <span>' . $name . '</span>';
}

/**
 * Implements hook_menu().
 */
function loop_admin_menu() {
  $items = array();

  $items['editor/dashboard/user-statistics'] = array(
    'title' => 'LOOP User statistics',
    'page callback' => '_loop_admin_user_statistics',
    'access arguments' => array('access user profiles'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function _loop_admin_user_statistics() {
  // Start with the comment table.
  $query = db_select('comment', 'comment');

  // Count comments for a user.
  $query->addExpression('COUNT(comment.cid)', 'comments');

  // Add user information.
  $query->rightJoin('users', 'u', 'comment.uid = u.uid');
  $query->addField('u', 'uid', 'uid');
  $query->addField('u', 'name', 'username');

  // Add username.
  $query->join('field_data_field_first_name', 'fn', 'fn.entity_id = u.uid');
  $query->join('field_data_field_last_name', 'ln', 'ln.entity_id = u.uid');
  $query->addField('fn', 'field_first_name_value', 'firstname');
  $query->addField('ln', 'field_last_name_value', 'lastname');

  // Group by each user.
  $query->groupBy('u.uid');

  // Get thumbs up.
  $query->addExpression("(SELECT count(*) FROM flagging WHERE flagging.entity_type = 'comment' AND flagging.uid = u.uid)", 'thumbs');

  // Get most accepted answers.
  $query->addExpression("IFNULL((SELECT count(*) FROM flag_counts fc JOIN comment c ON c.cid = fc.entity_id JOIN node n ON n.nid = c.nid WHERE entity_type = 'comment' AND c.uid = u.uid GROUP BY c.uid), 0)", 'accepted');

  $result = $query->execute()->fetchAllAssoc('uid');

  print_r($result);
}
